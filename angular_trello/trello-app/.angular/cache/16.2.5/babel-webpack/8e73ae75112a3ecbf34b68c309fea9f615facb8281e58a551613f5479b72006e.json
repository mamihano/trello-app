{"ast":null,"code":"import { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskColumnService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = environment.apiUrl;\n    this.taskColumns = [];\n  }\n  getTaskColumns() {\n    return this.http.get(`${this.apiServerUrl}/taskColumns`);\n  }\n  static #_ = this.ɵfac = function TaskColumnService_Factory(t) {\n    return new (t || TaskColumnService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskColumnService,\n    factory: TaskColumnService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","TaskColumnService","constructor","http","apiServerUrl","apiUrl","taskColumns","getTaskColumns","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\services\\task-column.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { TaskColumn } from '../models/task-column';\nimport { State } from '../enums/state';\nimport { environment } from 'src/environment/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskColumnService {\n  private apiServerUrl = environment.apiUrl;\n  constructor(private http: HttpClient) {}\n\n  private taskColumns: TaskColumn[] = [];\n\n  getTaskColumns(): Observable<TaskColumn[]> {\n    return this.http.get<TaskColumn[]>(`${this.apiServerUrl}/taskColumns`);\n  }\n\n  /* deleteCard(card: Card): void {\n    const index = this.cardList.indexOf(card);\n    if (index !== -1) {\n      this.cardList.splice(index, 1);\n    }\n  } */\n\n  /* deleteColumn(column: TaskColumn): void {\n    const index = this.taskColumnList.indexOf(column);\n    if (index !== -1) {\n      this.taskColumnList.splice(index, 1);\n    }\n  } */\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,6BAA6B;;;AAOzD,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,YAAY,GAAGJ,WAAW,CAACK,MAAM;IAGjC,KAAAC,WAAW,GAAiB,EAAE;EAFC;EAIvCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAe,GAAG,IAAI,CAACJ,YAAY,cAAc,CAAC;EACxE;EAAC,QAAAK,CAAA,G;qBARUR,iBAAiB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBb,iBAAiB;IAAAc,OAAA,EAAjBd,iBAAiB,CAAAe,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}