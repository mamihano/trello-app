{"ast":null,"code":"import { MatButtonModule } from '@angular/material/button';\nimport { CardComponent } from '../card/card.component';\nimport { ActionsDialogComponent } from '../actions-dialog/actions-dialog.component';\nimport { NgFor, NgIf } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../services/card.service\";\nimport * as i3 from \"@angular/material/button\";\nfunction TaskColumnComponent_ng_container_8_app_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-card\", 6);\n  }\n  if (rf & 2) {\n    const card_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"card\", card_r1);\n  }\n}\nfunction TaskColumnComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 4);\n    i0.ɵɵtemplate(1, TaskColumnComponent_ng_container_8_app_card_1_Template, 1, 1, \"app-card\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", card_r1.cardState === ctx_r0.column.columnState);\n  }\n}\nexport class TaskColumnComponent {\n  constructor(dialog, cardService) {\n    this.dialog = dialog;\n    this.cardService = cardService;\n    this.dialogConfig = {\n      data: {\n        dialogType: ''\n      }\n    };\n    this.cards = [];\n  }\n  ngOnInit() {\n    this.cards = this.cardService.getCards();\n  }\n  openDialog(dialogType) {\n    this.dialogConfig.data.dialogType = dialogType;\n    const dialogRef = this.dialog.open(ActionsDialogComponent, this.dialogConfig);\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('Dialog closed with result:', result);\n    });\n  }\n  static #_ = this.ɵfac = function TaskColumnComponent_Factory(t) {\n    return new (t || TaskColumnComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.CardService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskColumnComponent,\n    selectors: [[\"app-task-column\"]],\n    inputs: {\n      column: \"column\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 9,\n    vars: 2,\n    consts: [[1, \"task-column\"], [\"mat-button\", \"\", 1, \"create-task\", 3, \"click\"], [\"mat-button\", \"\", 1, \"delete-column\", 3, \"click\"], [\"class\", \"cards\", 4, \"ngFor\", \"ngForOf\"], [1, \"cards\"], [3, \"card\", 4, \"ngIf\"], [3, \"card\"]],\n    template: function TaskColumnComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"nav\")(2, \"h2\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function TaskColumnComponent_Template_button_click_4_listener() {\n          return ctx.openDialog(\"createCard\");\n        });\n        i0.ɵɵtext(5, \"Add task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function TaskColumnComponent_Template_button_click_6_listener() {\n          return ctx.openDialog(\"delete\");\n        });\n        i0.ɵɵtext(7, \"Delete column\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(8, TaskColumnComponent_ng_container_8_Template, 2, 1, \"ng-container\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.column == null ? null : ctx.column.columnName);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cards);\n      }\n    },\n    dependencies: [MatButtonModule, i3.MatButton, CardComponent, NgFor, NgIf],\n    styles: [\".task-column[_ngcontent-%COMP%] {\\n    height: 100%;\\n    max-width: 400px;\\n    border-right: 1px solid white;\\n}\\n.task-column[_ngcontent-%COMP%]   nav[_ngcontent-%COMP%] {\\n    background-color: darkcyan;\\n    height: 100px;\\n    border-radius: 5px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between; \\n    align-items: center;\\n}\\n.task-column[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    padding: 10px;\\n    margin-top: 10px;\\n    color: white;\\n    white-space: nowrap;\\n}\\n.task-column[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    font-size: 12px;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFzay1jb2x1bW4vdGFzay1jb2x1bW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsNkJBQTZCO0FBQ2pDO0FBQ0E7SUFDSSwwQkFBMEI7SUFDMUIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5QixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksZUFBZTtFQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi50YXNrLWNvbHVtbiB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgd2hpdGU7XHJcbn1cclxuLnRhc2stY29sdW1uIG5hdiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrY3lhbjtcclxuICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgXHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi50YXNrLWNvbHVtbiBoMiB7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbn1cclxuLnRhc2stY29sdW1uIGJ1dHRvbiB7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["MatButtonModule","CardComponent","ActionsDialogComponent","NgFor","NgIf","i0","ɵɵelement","ɵɵproperty","card_r1","ɵɵelementContainerStart","ɵɵtemplate","TaskColumnComponent_ng_container_8_app_card_1_Template","ɵɵelementContainerEnd","ɵɵadvance","cardState","ctx_r0","column","columnState","TaskColumnComponent","constructor","dialog","cardService","dialogConfig","data","dialogType","cards","ngOnInit","getCards","openDialog","dialogRef","open","afterClosed","subscribe","result","console","log","_","ɵɵdirectiveInject","i1","MatDialog","i2","CardService","_2","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TaskColumnComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TaskColumnComponent_Template_button_click_4_listener","TaskColumnComponent_Template_button_click_6_listener","TaskColumnComponent_ng_container_8_Template","ɵɵtextInterpolate","columnName","i3","MatButton","styles"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\task-column\\task-column.component.ts","C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\task-column\\task-column.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CardComponent } from '../card/card.component';\nimport { TaskColumn } from '../models/task-column';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ActionsDialogComponent } from '../actions-dialog/actions-dialog.component';\nimport { CardService } from '../services/card.service';\nimport { Card } from '../models/card';\nimport { NgFor, NgIf } from '@angular/common';\n\n@Component({\n  selector: 'app-task-column',\n  templateUrl: './task-column.component.html',\n  styleUrls: ['./task-column.component.css'],\n  standalone: true,\n  imports: [MatButtonModule, CardComponent, NgFor, NgIf]\n})\nexport class TaskColumnComponent implements OnInit {\n  @Input() column: TaskColumn | undefined;\n  private dialogConfig: MatDialogConfig = {\n    data: {\n      dialogType: ''\n    }\n  };\n\n  cards: Card[] = [];\n\n  constructor(public dialog: MatDialog,\n    private cardService: CardService) {}\n\n  ngOnInit(): void {\n    this.cards = this.cardService.getCards();\n  }\n\n  openDialog(dialogType: string) {\n    this.dialogConfig.data.dialogType = dialogType;\n\n    const dialogRef = this.dialog.open(ActionsDialogComponent, this.dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('Dialog closed with result:', result);\n    });\n  }\n}","<div class=\"task-column\">\n    <nav>\n        <h2>{{ column?.columnName }}</h2>\n        <button mat-button class=\"create-task\" (click)=\"openDialog('createCard')\">Add task</button>\n        <button mat-button class=\"delete-column\" (click)=\"openDialog('delete')\">Delete column</button>\n    </nav>\n    <ng-container class=\"cards\" *ngFor=\"let card of cards\">\n        <app-card [card]=\"card\" *ngIf=\"card.cardState === column.columnState\"></app-card>\n    </ng-container>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}