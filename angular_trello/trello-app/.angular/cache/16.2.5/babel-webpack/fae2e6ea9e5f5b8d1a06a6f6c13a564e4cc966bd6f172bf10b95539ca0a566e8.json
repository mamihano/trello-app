{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { NgIf } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/button\";\nexport class MenuComponent {\n  constructor(dialog) {\n    this.dialog = dialog;\n  }\n  createNewColumn() {\n    this.dialog.open(DialogDataExampleDialog, {\n      data: {\n        animal: 'panda'\n      }\n    });\n  }\n  static #_ = this.ɵfac = function MenuComponent_Factory(t) {\n    return new (t || MenuComponent)(i0.ɵɵdirectiveInject(i1.MatDialog));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MenuComponent,\n    selectors: [[\"app-menu\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 11,\n    vars: 0,\n    consts: [[1, \"menu\"], [\"mat-button\", \"\", 1, \"create-column\", 3, \"click\"], [\"mat-button\", \"\", 1, \"filter-column\"], [\"mat-button\", \"\", 1, \"delete-column\"]],\n    template: function MenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"ul\")(2, \"li\")(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function MenuComponent_Template_button_click_3_listener() {\n          return ctx.createNewColumn();\n        });\n        i0.ɵɵtext(4, \"Create new column\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"li\")(6, \"button\", 2);\n        i0.ɵɵtext(7, \"Filter columns\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"li\")(9, \"button\", 3);\n        i0.ɵɵtext(10, \"Delete column\");\n        i0.ɵɵelementEnd()()()();\n      }\n    },\n    dependencies: [MatButtonModule, i2.MatButton, MatDialogModule],\n    styles: [\".menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n    list-style: none;\\n    padding-left: 10px;\\n}\\n.menu[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    margin-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVudS9tZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxlQUFlO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLm1lbnUgdWwge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxufVxyXG4ubWVudSBidXR0b24ge1xyXG4gICAgbWFyZ2luLXRvcDogNXB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport let DialogDataExampleDialog = class DialogDataExampleDialog {\n  constructor(data) {\n    this.data = data;\n  }\n};\nDialogDataExampleDialog = __decorate([Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n  standalone: true,\n  imports: [MatDialogModule, NgIf]\n}), __param(0, Inject(MAT_DIALOG_DATA))], DialogDataExampleDialog);","map":{"version":3,"names":["Component","Inject","MatButtonModule","MAT_DIALOG_DATA","MatDialogModule","NgIf","MenuComponent","constructor","dialog","createNewColumn","open","DialogDataExampleDialog","data","animal","_","i0","ɵɵdirectiveInject","i1","MatDialog","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","MenuComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","MenuComponent_Template_button_click_3_listener","ɵɵtext","ɵɵelementEnd","i2","MatButton","styles","__decorate","selector","templateUrl","imports","__param"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\menu\\menu.component.ts","C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\menu\\menu.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatDialog, MAT_DIALOG_DATA, MatDialogModule} from '@angular/material/dialog';\nimport {NgIf} from '@angular/common';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css'],\n  standalone: true,\n  imports: [MatButtonModule, MatDialogModule]\n})\nexport class MenuComponent {\n  constructor(public dialog: MatDialog) {}\n\n  createNewColumn() {\n    this.dialog.open(DialogDataExampleDialog, {\n      data: {\n        animal: 'panda',\n      },\n    });\n  }\n\n}\n\nexport interface DialogData {\n  animal: 'panda' | 'unicorn' | 'lion';\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n  standalone: true,\n  imports: [MatDialogModule, NgIf],\n})\nexport class DialogDataExampleDialog {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}","<div class=\"menu\">\n  <ul>\n    <li><button mat-button class=\"create-column\" (click)=\"createNewColumn()\">Create new column</button></li>\n    <li><button mat-button class=\"filter-column\">Filter columns</button></li>\n    <li><button mat-button class=\"delete-column\">Delete column</button></li>\n  </ul>\n</div>\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACjD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAAmBC,eAAe,EAAEC,eAAe,QAAO,0BAA0B;AACpF,SAAQC,IAAI,QAAO,iBAAiB;;;;AASpC,OAAM,MAAOC,aAAa;EACxBC,YAAmBC,MAAiB;IAAjB,KAAAA,MAAM,GAANA,MAAM;EAAc;EAEvCC,eAAeA,CAAA;IACb,IAAI,CAACD,MAAM,CAACE,IAAI,CAACC,uBAAuB,EAAE;MACxCC,IAAI,EAAE;QACJC,MAAM,EAAE;;KAEX,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBATUR,aAAa,EAAAS,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,SAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbb,aAAa;IAAAc,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAP,EAAA,CAAAQ,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ1Bd,EAAA,CAAAgB,cAAA,aAAkB;QAE+BhB,EAAA,CAAAiB,UAAA,mBAAAC,+CAAA;UAAA,OAASH,GAAA,CAAArB,eAAA,EAAiB;QAAA,EAAC;QAACM,EAAA,CAAAmB,MAAA,wBAAiB;QAAAnB,EAAA,CAAAoB,YAAA,EAAS;QACnGpB,EAAA,CAAAgB,cAAA,SAAI;QAAyChB,EAAA,CAAAmB,MAAA,qBAAc;QAAAnB,EAAA,CAAAoB,YAAA,EAAS;QACpEpB,EAAA,CAAAgB,cAAA,SAAI;QAAyChB,EAAA,CAAAmB,MAAA,qBAAa;QAAAnB,EAAA,CAAAoB,YAAA,EAAS;;;mBDM3DjC,eAAe,EAAAkC,EAAA,CAAAC,SAAA,EAAEjC,eAAe;IAAAkC,MAAA;EAAA;;AAyBrC,WAAM3B,uBAAuB,GAA7B,MAAMA,uBAAuB;EAClCJ,YAA4CK,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;CAChE;AAFYD,uBAAuB,GAAA4B,UAAA,EANnCvC,SAAS,CAAC;EACTwC,QAAQ,EAAE,4BAA4B;EACtCC,WAAW,EAAE,iCAAiC;EAC9CpB,UAAU,EAAE,IAAI;EAChBqB,OAAO,EAAE,CAACtC,eAAe,EAAEC,IAAI;CAChC,CAAC,EAEasC,OAAA,IAAA1C,MAAM,CAACE,eAAe,CAAC,E,EADzBQ,uBAAuB,CAEnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}