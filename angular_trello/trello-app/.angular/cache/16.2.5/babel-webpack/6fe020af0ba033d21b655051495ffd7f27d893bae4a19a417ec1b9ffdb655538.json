{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { ActionsDialogComponent } from '../actions-dialog/actions-dialog.component';\nimport { FormsModule } from '@angular/forms';\nexport let CardComponent = class CardComponent {\n  constructor(dialog, cardService) {\n    this.dialog = dialog;\n    this.cardService = cardService;\n    this.cardDeleted = new EventEmitter();\n    this.dialogConfig = {\n      data: {\n        dialogType: ''\n      }\n    };\n    this.cards = [];\n    this.showEditForm = false;\n  }\n  openDialog(dialogType) {\n    this.dialogConfig.data.dialogType = dialogType;\n    const dialogRef = this.dialog.open(ActionsDialogComponent, this.dialogConfig);\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'edit-card') {\n        // Handle the edit action if needed\n        console.log('Edit action triggered.');\n      }\n    });\n  }\n  cancelForm() {\n    this.showEditForm = false;\n  }\n  editCard(card) {\n    card.cardName = this.taskName;\n    card.cardDescription = this.description;\n    card.taskHandler = this.taskHandler;\n    card.cardState = this.cardState;\n    this.cardService.editCard(card).subscribe(response => {\n      this.cards.push(response);\n      console.log('Card updated successfully:', response);\n    }, error => {\n      console.error('Error updating card:', error);\n    });\n    this.showEditForm = false;\n  }\n  deleteCard(card) {\n    if (card.cardId) {\n      this.cardService.deleteCard(card.cardId).subscribe(response => {\n        this.cardDeleted.emit(card);\n        console.log('Card successfully deleted:', response);\n      }, error => {\n        console.error('Error deleting card:', error);\n      });\n    } else {\n      console.error('Card is undefined.');\n    }\n  }\n};\n__decorate([Input()], CardComponent.prototype, \"card\", void 0);\n__decorate([Output()], CardComponent.prototype, \"cardDeleted\", void 0);\nCardComponent = __decorate([Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css'],\n  standalone: true,\n  imports: [MatCardModule, MatDividerModule, MatButtonModule, MatProgressBarModule, FormsModule]\n})], CardComponent);","map":{"version":3,"names":["Component","EventEmitter","Input","Output","MatProgressBarModule","MatButtonModule","MatDividerModule","MatCardModule","ActionsDialogComponent","FormsModule","CardComponent","constructor","dialog","cardService","cardDeleted","dialogConfig","data","dialogType","cards","showEditForm","openDialog","dialogRef","open","afterClosed","subscribe","result","console","log","cancelForm","editCard","card","cardName","taskName","cardDescription","description","taskHandler","cardState","response","push","error","deleteCard","cardId","emit","__decorate","selector","templateUrl","styleUrls","standalone","imports"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\card\\card.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\nimport { Card } from '../models/card';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ActionsDialogComponent } from '../actions-dialog/actions-dialog.component';\nimport { CardService } from '../services/card.service';\nimport { State } from '../enums/state';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css'],\n  standalone: true,\n  imports: [MatCardModule, MatDividerModule, MatButtonModule, MatProgressBarModule, FormsModule]\n})\n\nexport class CardComponent {\n\n  @Input() card: Card | undefined;\n  @Output() cardDeleted: EventEmitter<Card> = new EventEmitter<Card>();\n  private dialogConfig: MatDialogConfig = {\n    data: {\n      dialogType: ''\n    }\n  };\n\n  cards: Card[] = [];\n  showEditForm: boolean = false;\n  taskName!: string;\n  description!: string;\n  taskHandler!: string;\n  cardState!: State;\n\n  constructor(public dialog: MatDialog, private cardService: CardService) {}\n\n  openDialog(dialogType: string) {\n    this.dialogConfig.data.dialogType = dialogType;\n      \n    const dialogRef = this.dialog.open(ActionsDialogComponent, this.dialogConfig);\n  \n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'edit-card') {\n        // Handle the edit action if needed\n        console.log('Edit action triggered.');\n      }\n    });\n  }\n\n  public cancelForm(): void {\n    this.showEditForm = false;\n  }\n\n  public editCard(card: Card): void {\n    card.cardName = this.taskName;\n    card.cardDescription = this.description;\n    card.taskHandler = this.taskHandler;\n    card.cardState = this.cardState;\n    this.cardService.editCard(card).subscribe(\n      (response: Card) => {\n        this.cards.push(response);\n        console.log('Card updated successfully:', response);\n      },\n      (error) => {\n        console.error('Error updating card:', error);\n      }\n    );\n    this.showEditForm = false;\n  }\n\n  public deleteCard(card: Card): void {\n    if (card.cardId) {\n      this.cardService.deleteCard(card.cardId).subscribe(\n        (response: void) => {\n          this.cardDeleted.emit(card);\n          console.log('Card successfully deleted:', response);\n        },\n        (error) => {\n          console.error('Error deleting card:', error);\n        }\n      );\n    } else {\n      console.error('Card is undefined.');\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}