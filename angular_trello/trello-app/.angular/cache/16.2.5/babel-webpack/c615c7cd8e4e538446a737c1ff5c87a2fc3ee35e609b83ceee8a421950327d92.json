{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogConfig, MatDialogModule } from '@angular/material/dialog';\nimport { ActionsDialogComponent } from '../actions-dialog/actions-dialog.component';\nexport let MenuComponent = class MenuComponent {\n  constructor(dialog) {\n    this.dialog = dialog;\n    this.dialogConfig = {\n      data: {\n        showDialogType: 'create'\n      }\n    };\n  }\n  createNewColumn() {\n    const dialogConfig = {\n      data: {\n        showDialogType: 'create'\n      }\n    };\n    const dialogRef = this.dialog.open(ActionsDialogComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('Dialog closed with result:', result);\n    });\n  }\n  filterColumns() {\n    const dialogConfig = {\n      data: {\n        showDialogType: 'edit'\n      }\n    };\n    const dialogRef = this.dialog.open(ActionsDialogComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('Dialog closed with result:', result);\n    });\n  }\n  deleteColumn() {\n    const dialogConfig = {\n      data: {\n        showDialogType: 'delete'\n      }\n    };\n    const dialogRef = this.dialog.open(ActionsDialogComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('Dialog closed with result:', result);\n    });\n  }\n};\nMenuComponent = __decorate([Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css'],\n  standalone: true,\n  imports: [MatButtonModule, MatDialogModule, MatDialogConfig]\n})], MenuComponent);","map":{"version":3,"names":["Component","MatButtonModule","MatDialogConfig","MatDialogModule","ActionsDialogComponent","MenuComponent","constructor","dialog","dialogConfig","data","showDialogType","createNewColumn","dialogRef","open","afterClosed","subscribe","result","console","log","filterColumns","deleteColumn","__decorate","selector","templateUrl","styleUrls","standalone","imports"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\menu\\menu.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatDialog, MatDialogConfig, MatDialogModule} from '@angular/material/dialog';\nimport { ActionsDialogComponent } from '../actions-dialog/actions-dialog.component';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css'],\n  standalone: true,\n  imports: [MatButtonModule, MatDialogModule, MatDialogConfig]\n})\nexport class MenuComponent {\n\n  private dialogConfig: MatDialogConfig = {\n    data: {\n      showDialogType: 'create'\n    }\n  };\n  constructor(public dialog: MatDialog) {}\n\n  createNewColumn() {\n    const dialogConfig = {\n      data: {\n        showDialogType: 'create'\n      }\n    };\n  \n    const dialogRef = this.dialog.open(ActionsDialogComponent, dialogConfig);\n  \n    dialogRef.afterClosed().subscribe(result => {\n      console.log('Dialog closed with result:', result);\n    });\n  }\n\n  filterColumns() {\n    const dialogConfig = {\n      data: {\n        showDialogType: 'edit'\n      }\n    };\n  \n    const dialogRef = this.dialog.open(ActionsDialogComponent, dialogConfig);\n  \n    dialogRef.afterClosed().subscribe(result => {\n      console.log('Dialog closed with result:', result);\n    });\n  }\n\n  deleteColumn() {\n    const dialogConfig = {\n      data: {\n        showDialogType: 'delete'\n      }\n    };\n  \n    const dialogRef = this.dialog.open(ActionsDialogComponent, dialogConfig);\n  \n    dialogRef.afterClosed().subscribe(result => {\n      console.log('Dialog closed with result:', result);\n    });\n  }\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAAmBC,eAAe,EAAEC,eAAe,QAAO,0BAA0B;AACpF,SAASC,sBAAsB,QAAQ,4CAA4C;AAS5E,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAOxBC,YAAmBC,MAAiB;IAAjB,KAAAA,MAAM,GAANA,MAAM;IALjB,KAAAC,YAAY,GAAoB;MACtCC,IAAI,EAAE;QACJC,cAAc,EAAE;;KAEnB;EACsC;EAEvCC,eAAeA,CAAA;IACb,MAAMH,YAAY,GAAG;MACnBC,IAAI,EAAE;QACJC,cAAc,EAAE;;KAEnB;IAED,MAAME,SAAS,GAAG,IAAI,CAACL,MAAM,CAACM,IAAI,CAACT,sBAAsB,EAAEI,YAAY,CAAC;IAExEI,SAAS,CAACE,WAAW,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACzCC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAAC;IACnD,CAAC,CAAC;EACJ;EAEAG,aAAaA,CAAA;IACX,MAAMX,YAAY,GAAG;MACnBC,IAAI,EAAE;QACJC,cAAc,EAAE;;KAEnB;IAED,MAAME,SAAS,GAAG,IAAI,CAACL,MAAM,CAACM,IAAI,CAACT,sBAAsB,EAAEI,YAAY,CAAC;IAExEI,SAAS,CAACE,WAAW,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACzCC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAAC;IACnD,CAAC,CAAC;EACJ;EAEAI,YAAYA,CAAA;IACV,MAAMZ,YAAY,GAAG;MACnBC,IAAI,EAAE;QACJC,cAAc,EAAE;;KAEnB;IAED,MAAME,SAAS,GAAG,IAAI,CAACL,MAAM,CAACM,IAAI,CAACT,sBAAsB,EAAEI,YAAY,CAAC;IAExEI,SAAS,CAACE,WAAW,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACzCC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAAC;IACnD,CAAC,CAAC;EACJ;CAED;AAnDYX,aAAa,GAAAgB,UAAA,EAPzBrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB,CAAC;EACnCC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACzB,eAAe,EAAEE,eAAe,EAAED,eAAe;CAC5D,CAAC,C,EACWG,aAAa,CAmDzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}