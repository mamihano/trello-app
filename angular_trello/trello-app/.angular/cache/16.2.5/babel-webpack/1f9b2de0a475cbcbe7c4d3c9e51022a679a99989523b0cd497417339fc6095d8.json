{"ast":null,"code":"import { TaskColumnService } from '../services/task-column.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/task-column.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../task-column/task-column.component\";\nfunction ColumnBoardComponent_app_task_column_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-task-column\");\n  }\n}\nexport class ColumnBoardComponent {\n  constructor(taskColumnService) {\n    this.taskColumnService = taskColumnService;\n    this.taskColumns = [];\n  }\n  ngOnInit() {\n    this.taskColumns = this.taskColumnService.getTaskColumns();\n  }\n  static #_ = this.ɵfac = function ColumnBoardComponent_Factory(t) {\n    return new (t || ColumnBoardComponent)(i0.ɵɵdirectiveInject(i1.TaskColumnService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ColumnBoardComponent,\n    selectors: [[\"app-column-board\"]],\n    features: [i0.ɵɵProvidersFeature([TaskColumnService])],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"columns\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ColumnBoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ColumnBoardComponent_app_task_column_1_Template, 1, 0, \"app-task-column\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.taskColumns);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.TaskColumnComponent],\n    styles: [\".columns[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29sdW1uLWJvYXJkL2NvbHVtbi1ib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbHVtbnMge1xyXG4gIGhlaWdodDogMTAwJTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["TaskColumnService","i0","ɵɵelement","ColumnBoardComponent","constructor","taskColumnService","taskColumns","ngOnInit","getTaskColumns","_","ɵɵdirectiveInject","i1","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","ColumnBoardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtemplate","ColumnBoardComponent_app_task_column_1_Template","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\column-board\\column-board.component.ts","C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\column-board\\column-board.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskColumnService } from '../services/task-column.service';\nimport { TaskColumn } from '../models/task-column';\n\n@Component({\n  selector: 'app-column-board',\n  templateUrl: './column-board.component.html',\n  styleUrls: ['./column-board.component.css'],\n  providers: [TaskColumnService]\n})\nexport class ColumnBoardComponent implements OnInit {\n  taskColumns: TaskColumn[] = [];\n  constructor (private taskColumnService: TaskColumnService) {}\n  \n  ngOnInit() {\n    this.taskColumns = this.taskColumnService.getTaskColumns();\n    }\n}\n\n","<div class=\"columns\">\n    <app-task-column *ngFor=\"let column of taskColumns\"></app-task-column>\n</div>\n"],"mappings":"AACA,SAASA,iBAAiB,QAAQ,iCAAiC;;;;;;;ICA/DC,EAAA,CAAAC,SAAA,sBAAsE;;;ADS1E,OAAM,MAAOC,oBAAoB;EAE/BC,YAAqBC,iBAAoC;IAApC,KAAAA,iBAAiB,GAAjBA,iBAAiB;IADtC,KAAAC,WAAW,GAAiB,EAAE;EAC8B;EAE5DC,QAAQA,CAAA;IACN,IAAI,CAACD,WAAW,GAAG,IAAI,CAACD,iBAAiB,CAACG,cAAc,EAAE;EAC1D;EAAC,QAAAC,CAAA,G;qBANQN,oBAAoB,EAAAF,EAAA,CAAAS,iBAAA,CAAAC,EAAA,CAAAX,iBAAA;EAAA;EAAA,QAAAY,EAAA,G;UAApBT,oBAAoB;IAAAU,SAAA;IAAAC,QAAA,GAAAb,EAAA,CAAAc,kBAAA,CAFpB,CAACf,iBAAiB,CAAC;IAAAgB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRhCpB,EAAA,CAAAsB,cAAA,aAAqB;QACjBtB,EAAA,CAAAuB,UAAA,IAAAC,+CAAA,6BAAsE;QAC1ExB,EAAA,CAAAyB,YAAA,EAAM;;;QADkCzB,EAAA,CAAA0B,SAAA,GAAc;QAAd1B,EAAA,CAAA2B,UAAA,YAAAN,GAAA,CAAAhB,WAAA,CAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}