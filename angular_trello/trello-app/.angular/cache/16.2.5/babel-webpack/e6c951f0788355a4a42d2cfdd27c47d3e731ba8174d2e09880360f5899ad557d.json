{"ast":null,"code":"import { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CardService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = environment.apiUrl + \"/cards\";\n  }\n  getCards() {\n    return this.http.get(this.apiServerUrl);\n  }\n  createCard(card) {\n    return this.http.post(this.apiServerUrl, card);\n  }\n  deleteCard(cardId) {\n    return this.http.delete(`${this.apiServerUrl}/${cardId}`);\n  }\n  editCard(card) {\n    return this.http.put(`${this.apiServerUrl}/${card.cardId}`, card);\n  }\n  static #_ = this.ɵfac = function CardService_Factory(t) {\n    return new (t || CardService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CardService,\n    factory: CardService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","CardService","constructor","http","apiServerUrl","apiUrl","getCards","get","createCard","card","post","deleteCard","cardId","delete","editCard","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\services\\card.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Card } from '../models/card';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardService {\n  private apiServerUrl = environment.apiUrl + \"/cards\";\n  constructor(private http: HttpClient) {}\n\n  getCards(): Observable<Card[]> {\n    return this.http.get<Card[]>(this.apiServerUrl);\n  }\n\n  createCard(card: Card): Observable<Card> {\n    return this.http.post<Card>(this.apiServerUrl, card);\n  }\n\n  public deleteCard(cardId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiServerUrl}/${cardId}`);\n  }\n\n  public editCard(card: Card): Observable<Card> {\n    return this.http.put<Card>(`${this.apiServerUrl}/${card.cardId}`, card);\n  }\n}"],"mappings":"AAIA,SAASA,WAAW,QAAQ,6BAA6B;;;AAKzD,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,YAAY,GAAGJ,WAAW,CAACK,MAAM,GAAG,QAAQ;EACb;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAS,IAAI,CAACH,YAAY,CAAC;EACjD;EAEAI,UAAUA,CAACC,IAAU;IACnB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAO,IAAI,CAACN,YAAY,EAAEK,IAAI,CAAC;EACtD;EAEOE,UAAUA,CAACC,MAAc;IAC9B,OAAO,IAAI,CAACT,IAAI,CAACU,MAAM,CAAO,GAAG,IAAI,CAACT,YAAY,IAAIQ,MAAM,EAAE,CAAC;EACjE;EAEOE,QAAQA,CAACL,IAAU;IACxB,OAAO,IAAI,CAACN,IAAI,CAACY,GAAG,CAAO,GAAG,IAAI,CAACX,YAAY,IAAIK,IAAI,CAACG,MAAM,EAAE,EAAEH,IAAI,CAAC;EACzE;EAAC,QAAAO,CAAA,G;qBAlBUf,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXpB,WAAW;IAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}