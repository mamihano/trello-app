{"ast":null,"code":"import { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BoardService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = environment.apiUrl + \"/boards\";\n  }\n  getBoards() {\n    return this.http.get(this.apiServerUrl);\n  }\n  static #_ = this.ɵfac = function BoardService_Factory(t) {\n    return new (t || BoardService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BoardService,\n    factory: BoardService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","BoardService","constructor","http","apiServerUrl","apiUrl","getBoards","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\services\\board.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Board } from '../models/board';\nimport { environment } from 'src/environment/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardService {\n\n  private apiServerUrl = environment.apiUrl + \"/boards\";\n  constructor(private http: HttpClient) {}\n\n  public getBoards() : Observable<Board[]> {\n    return this.http.get<Board[]>(this.apiServerUrl);\n  }\n}"],"mappings":"AAEA,SAASA,WAAW,QAAQ,6BAA6B;;;AAOzD,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,YAAY,GAAGJ,WAAW,CAACK,MAAM,GAAG,SAAS;EACd;EAEhCC,SAASA,CAAA;IACd,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAU,IAAI,CAACH,YAAY,CAAC;EAClD;EAAC,QAAAI,CAAA,G;qBAPUP,YAAY,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZZ,YAAY;IAAAa,OAAA,EAAZb,YAAY,CAAAc,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}