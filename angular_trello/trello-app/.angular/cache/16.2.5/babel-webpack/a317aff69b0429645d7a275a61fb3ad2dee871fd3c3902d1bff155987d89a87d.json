{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CardService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  // =[\n  //   {cardName: \"Water plants\", cardDescription: `Water all plants in garden. Tomatoes need half liter of water per plant every two days.\n  //   Cucumbers need 1 liter of water every day. Paprika needs 1 liter of water every 3 days.`, cardState: State.TO_DO, taskHandler: \"Marin\"},\n  //   {cardName: \"Shorten lawn\", cardDescription: `Shorten lawn to half inch length. Use electric trimmer and after that water lawn.`,\n  //    cardState: State.TO_DO, taskHandler: \"Dinka\"},\n  //   {cardName: \"Clean house\", cardDescription: `Vacuum all the floors and wipe the dust from the furniture. Wash windows and shutters.`,\n  //    cardState: State.DONE, taskHandler: \"Dinka\"},\n  //   {cardName: \"Prepare launch\", cardDescription: `Go for groceries in market. Prepare all vegetables for soup and put meat in the owen.`,\n  //    cardState: State.IN_PROGRESS, taskHandler: \"Marin\"}\n  // ];\n  getCards() {\n    console.log(\"getcards\");\n    return this.httpClient.get('https://localhost:8080/cards');\n  }\n  deleteCard(card) {\n    const index = this.cardList.indexOf(card);\n    if (index !== -1) {\n      this.cardList.splice(index, 1);\n    }\n  }\n  static #_ = this.ɵfac = function CardService_Factory(t) {\n    return new (t || CardService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CardService,\n    factory: CardService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CardService","constructor","httpClient","getCards","console","log","get","deleteCard","card","index","cardList","indexOf","splice","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\services\\card.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Card } from '../models/card';\nimport { State } from '../enums/state';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, catchError, tap, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardService {\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  private cardList!: Card[];\n  // =[\n  //   {cardName: \"Water plants\", cardDescription: `Water all plants in garden. Tomatoes need half liter of water per plant every two days.\n  //   Cucumbers need 1 liter of water every day. Paprika needs 1 liter of water every 3 days.`, cardState: State.TO_DO, taskHandler: \"Marin\"},\n  //   {cardName: \"Shorten lawn\", cardDescription: `Shorten lawn to half inch length. Use electric trimmer and after that water lawn.`,\n  //    cardState: State.TO_DO, taskHandler: \"Dinka\"},\n  //   {cardName: \"Clean house\", cardDescription: `Vacuum all the floors and wipe the dust from the furniture. Wash windows and shutters.`,\n  //    cardState: State.DONE, taskHandler: \"Dinka\"},\n  //   {cardName: \"Prepare launch\", cardDescription: `Go for groceries in market. Prepare all vegetables for soup and put meat in the owen.`,\n  //    cardState: State.IN_PROGRESS, taskHandler: \"Marin\"}\n  // ];\n\n  getCards(): Observable<Card[]> {\n    console.log(\"getcards\");\n    return this.httpClient.get<Card[]>('https://localhost:8080/cards');\n  }\n  \n\n  deleteCard(card: Card): void {\n    const index = this.cardList.indexOf(card);\n    if (index !== -1) {\n      this.cardList.splice(index, 1);\n    }\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,WAAW;EACtBC,YACUC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAChB;EAGJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAS,8BAA8B,CAAC;EACpE;EAGAC,UAAUA,CAACC,IAAU;IACnB,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,CAACC,OAAO,CAACH,IAAI,CAAC;IACzC,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACC,QAAQ,CAACE,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;;EAElC;EAAC,QAAAI,CAAA,G;qBA5BUb,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXlB,WAAW;IAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}