{"ast":null,"code":"import { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { ActionsDialogComponent } from '../actions-dialog/actions-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../services/card.service\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/divider\";\nimport * as i5 from \"@angular/material/button\";\nexport class CardComponent {\n  constructor(dialog, cardService) {\n    this.dialog = dialog;\n    this.cardService = cardService;\n    this.dialogConfig = {\n      data: {\n        dialogType: ''\n      }\n    };\n  }\n  openDialog(dialogType) {\n    this.dialogConfig.data.dialogType = dialogType;\n    const dialogRef = this.dialog.open(ActionsDialogComponent, this.dialogConfig);\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'edit-card') {\n        // Handle the edit action if needed\n        console.log('Edit action triggered.');\n      }\n    });\n  }\n  deleteCard(card) {\n    if (card.cardId) {\n      this.cardService.deleteCard(card.cardId);\n    } else {\n      console.error('Card is undefined.');\n    }\n  }\n  static #_ = this.ɵfac = function CardComponent_Factory(t) {\n    return new (t || CardComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.CardService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CardComponent,\n    selectors: [[\"app-card\"]],\n    inputs: {\n      card: \"card\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 21,\n    vars: 3,\n    consts: [[1, \"card\"], [\"mat-button\", \"\", 1, \"edit-card\", 3, \"click\"], [\"mat-button\", \"\", 1, \"delete-card\", 3, \"click\"]],\n    template: function CardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\")(2, \"mat-card-subtitle\");\n        i0.ɵɵtext(3, \"Task name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-title\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"mat-card-subtitle\");\n        i0.ɵɵtext(8, \"Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-card-subtitle\");\n        i0.ɵɵtext(12, \"Task handler:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"mat-divider\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-card-actions\")(17, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CardComponent_Template_button_click_17_listener() {\n          return ctx.openDialog(\"edit-card\");\n        });\n        i0.ɵɵtext(18, \"Edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function CardComponent_Template_button_click_19_listener() {\n          return (ctx.card == null ? null : ctx.card.cardId) && ctx.deleteCard(ctx.card);\n        });\n        i0.ɵɵtext(20, \"Delete\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.card == null ? null : ctx.card.cardName);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.card == null ? null : ctx.card.cardDescription);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.card == null ? null : ctx.card.taskHandler);\n      }\n    },\n    dependencies: [MatCardModule, i3.MatCard, i3.MatCardActions, i3.MatCardContent, i3.MatCardHeader, i3.MatCardSubtitle, i3.MatCardTitle, MatDividerModule, i4.MatDivider, MatButtonModule, i5.MatButton, MatProgressBarModule],\n    styles: [\".card[_ngcontent-%COMP%] {\\n  max-width: 340px;\\n  border-style: double;\\n  background-color:lightgray;\\n  margin: 10px;\\n  border-radius: 5px;\\n}\\n.card-header[_ngcontent-%COMP%] {\\n  border: 1px solid white;\\n  border-radius: 5px;\\n}\\n.card-content[_ngcontent-%COMP%] {\\n  border: 1px solid white;\\n  border-radius: 5px;\\n}\\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\\n  color:black;\\n}\\nmat-card-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FyZC9jYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsb0JBQW9CO0VBQ3BCLDBCQUEwQjtFQUMxQixZQUFZO0VBQ1osa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLGFBQWE7RUFDYix5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XHJcbiAgbWF4LXdpZHRoOiAzNDBweDtcclxuICBib3JkZXItc3R5bGU6IGRvdWJsZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOmxpZ2h0Z3JheTtcclxuICBtYXJnaW46IDEwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcbi5jYXJkLWhlYWRlciB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcbi5jYXJkLWNvbnRlbnQge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG4ubWF0LW1kYy1jYXJkLXN1YnRpdGxlIHtcclxuICBjb2xvcjpibGFjaztcclxufVxyXG5tYXQtY2FyZC1hY3Rpb25zIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["MatProgressBarModule","MatButtonModule","MatDividerModule","MatCardModule","ActionsDialogComponent","CardComponent","constructor","dialog","cardService","dialogConfig","data","dialogType","openDialog","dialogRef","open","afterClosed","subscribe","result","console","log","deleteCard","card","cardId","error","_","i0","ɵɵdirectiveInject","i1","MatDialog","i2","CardService","_2","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","CardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","CardComponent_Template_button_click_17_listener","CardComponent_Template_button_click_19_listener","ɵɵadvance","ɵɵtextInterpolate","cardName","cardDescription","taskHandler","i3","MatCard","MatCardActions","MatCardContent","MatCardHeader","MatCardSubtitle","MatCardTitle","i4","MatDivider","i5","MatButton","styles"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\card\\card.component.ts","C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\card\\card.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\nimport { Card } from '../models/card';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ActionsDialogComponent } from '../actions-dialog/actions-dialog.component';\nimport { CardService } from '../services/card.service';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css'],\n  standalone: true,\n  imports: [MatCardModule, MatDividerModule, MatButtonModule, MatProgressBarModule]\n})\n\nexport class CardComponent {\n\n  @Input() card: Card | undefined;\n  private dialogConfig: MatDialogConfig = {\n    data: {\n      dialogType: ''\n    }\n  };\n\n  constructor(public dialog: MatDialog, private cardService: CardService) {}\n\n  openDialog(dialogType: string) {\n    this.dialogConfig.data.dialogType = dialogType;\n      \n    const dialogRef = this.dialog.open(ActionsDialogComponent, this.dialogConfig);\n  \n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'edit-card') {\n        // Handle the edit action if needed\n        console.log('Edit action triggered.');\n      }\n    });\n  }\n  public deleteCard(card: Card): void {\n    if (card.cardId) {\n      this.cardService.deleteCard(card.cardId);\n    } else {\n      console.error('Card is undefined.');\n    }\n  }\n}","<mat-card class=\"card\">\n  <mat-card-header>\n    <mat-card-subtitle>Task name:</mat-card-subtitle>\n    <mat-card-title>{{ card?.cardName }}</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <mat-card-subtitle>Description:</mat-card-subtitle>\n    <p>{{ card?.cardDescription }}</p>\n    <mat-card-subtitle>Task handler:</mat-card-subtitle>\n    <p>{{ card?.taskHandler }}</p>\n    <mat-divider></mat-divider>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button class=\"edit-card\" (click)=\"openDialog('edit-card')\">Edit</button>\n    <button mat-button class=\"delete-card\" (click)=\"card?.cardId && deleteCard(card)\">Delete</button>\n  </mat-card-actions>\n</mat-card>\n"],"mappings":"AACA,SAAQA,oBAAoB,QAAO,gCAAgC;AACnE,SAAQC,eAAe,QAAO,0BAA0B;AACxD,SAAQC,gBAAgB,QAAO,2BAA2B;AAC1D,SAAQC,aAAa,QAAO,wBAAwB;AAGpD,SAASC,sBAAsB,QAAQ,4CAA4C;;;;;;;AAWnF,OAAM,MAAOC,aAAa;EASxBC,YAAmBC,MAAiB,EAAUC,WAAwB;IAAnD,KAAAD,MAAM,GAANA,MAAM;IAAqB,KAAAC,WAAW,GAAXA,WAAW;IANjD,KAAAC,YAAY,GAAoB;MACtCC,IAAI,EAAE;QACJC,UAAU,EAAE;;KAEf;EAEwE;EAEzEC,UAAUA,CAACD,UAAkB;IAC3B,IAAI,CAACF,YAAY,CAACC,IAAI,CAACC,UAAU,GAAGA,UAAU;IAE9C,MAAME,SAAS,GAAG,IAAI,CAACN,MAAM,CAACO,IAAI,CAACV,sBAAsB,EAAE,IAAI,CAACK,YAAY,CAAC;IAE7EI,SAAS,CAACE,WAAW,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACzC,IAAIA,MAAM,KAAK,WAAW,EAAE;QAC1B;QACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;;IAEzC,CAAC,CAAC;EACJ;EACOC,UAAUA,CAACC,IAAU;IAC1B,IAAIA,IAAI,CAACC,MAAM,EAAE;MACf,IAAI,CAACd,WAAW,CAACY,UAAU,CAACC,IAAI,CAACC,MAAM,CAAC;KACzC,MAAM;MACLJ,OAAO,CAACK,KAAK,CAAC,oBAAoB,CAAC;;EAEvC;EAAC,QAAAC,CAAA,G;qBA7BUnB,aAAa,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,SAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAb1B,aAAa;IAAA2B,SAAA;IAAAC,MAAA;MAAAZ,IAAA;IAAA;IAAAa,UAAA;IAAAC,QAAA,GAAAV,EAAA,CAAAW,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QClB1BjB,EAAA,CAAAmB,cAAA,kBAAuB;QAEAnB,EAAA,CAAAoB,MAAA,iBAAU;QAAApB,EAAA,CAAAqB,YAAA,EAAoB;QACjDrB,EAAA,CAAAmB,cAAA,qBAAgB;QAAAnB,EAAA,CAAAoB,MAAA,GAAoB;QAAApB,EAAA,CAAAqB,YAAA,EAAiB;QAEvDrB,EAAA,CAAAmB,cAAA,uBAAkB;QACGnB,EAAA,CAAAoB,MAAA,mBAAY;QAAApB,EAAA,CAAAqB,YAAA,EAAoB;QACnDrB,EAAA,CAAAmB,cAAA,QAAG;QAAAnB,EAAA,CAAAoB,MAAA,IAA2B;QAAApB,EAAA,CAAAqB,YAAA,EAAI;QAClCrB,EAAA,CAAAmB,cAAA,yBAAmB;QAAAnB,EAAA,CAAAoB,MAAA,qBAAa;QAAApB,EAAA,CAAAqB,YAAA,EAAoB;QACpDrB,EAAA,CAAAmB,cAAA,SAAG;QAAAnB,EAAA,CAAAoB,MAAA,IAAuB;QAAApB,EAAA,CAAAqB,YAAA,EAAI;QAC9BrB,EAAA,CAAAsB,SAAA,mBAA2B;QAC7BtB,EAAA,CAAAqB,YAAA,EAAmB;QACnBrB,EAAA,CAAAmB,cAAA,wBAAkB;QACqBnB,EAAA,CAAAuB,UAAA,mBAAAC,gDAAA;UAAA,OAASN,GAAA,CAAA/B,UAAA,CAAW,WAAW,CAAC;QAAA,EAAC;QAACa,EAAA,CAAAoB,MAAA,YAAI;QAAApB,EAAA,CAAAqB,YAAA,EAAS;QACpFrB,EAAA,CAAAmB,cAAA,iBAAkF;QAA3CnB,EAAA,CAAAuB,UAAA,mBAAAE,gDAAA;UAAA,QAAAP,GAAA,CAAAtB,IAAA,kBAAAsB,GAAA,CAAAtB,IAAA,CAAAC,MAAA,KAAyBqB,GAAA,CAAAvB,UAAA,CAAAuB,GAAA,CAAAtB,IAAA,CAAgB;QAAA,EAAC;QAACI,EAAA,CAAAoB,MAAA,cAAM;QAAApB,EAAA,CAAAqB,YAAA,EAAS;;;QAXjFrB,EAAA,CAAA0B,SAAA,GAAoB;QAApB1B,EAAA,CAAA2B,iBAAA,CAAAT,GAAA,CAAAtB,IAAA,kBAAAsB,GAAA,CAAAtB,IAAA,CAAAgC,QAAA,CAAoB;QAIjC5B,EAAA,CAAA0B,SAAA,GAA2B;QAA3B1B,EAAA,CAAA2B,iBAAA,CAAAT,GAAA,CAAAtB,IAAA,kBAAAsB,GAAA,CAAAtB,IAAA,CAAAiC,eAAA,CAA2B;QAE3B7B,EAAA,CAAA0B,SAAA,GAAuB;QAAvB1B,EAAA,CAAA2B,iBAAA,CAAAT,GAAA,CAAAtB,IAAA,kBAAAsB,GAAA,CAAAtB,IAAA,CAAAkC,WAAA,CAAuB;;;mBDMlBpD,aAAa,EAAAqD,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,cAAA,EAAAF,EAAA,CAAAG,cAAA,EAAAH,EAAA,CAAAI,aAAA,EAAAJ,EAAA,CAAAK,eAAA,EAAAL,EAAA,CAAAM,YAAA,EAAE5D,gBAAgB,EAAA6D,EAAA,CAAAC,UAAA,EAAE/D,eAAe,EAAAgE,EAAA,CAAAC,SAAA,EAAElE,oBAAoB;IAAAmE,MAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}