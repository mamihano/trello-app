{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule } from '@angular/forms';\nimport { NgIf } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/card.service\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/divider\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/forms\";\nfunction CardComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"h1\", 5);\n    i0.ɵɵtext(2, \"Edit task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 6)(4, \"form\")(5, \"div\", 7)(6, \"label\", 8);\n    i0.ɵɵtext(7, \"Task name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementStart(9, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function CardComponent_div_19_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.taskName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 10);\n    i0.ɵɵtext(13, \"Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"br\");\n    i0.ɵɵelementStart(15, \"textarea\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function CardComponent_div_19_Template_textarea_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.description = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 8);\n    i0.ɵɵtext(18, \"Task handler:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"br\");\n    i0.ɵɵelementStart(20, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function CardComponent_div_19_Template_input_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.taskHandler = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"br\");\n    i0.ɵɵelementStart(23, \"div\", 7)(24, \"label\", 13);\n    i0.ɵɵtext(25, \"Select state:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"select\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function CardComponent_div_19_Template_select_ngModelChange_26_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.cardState = $event);\n    });\n    i0.ɵɵelementStart(27, \"option\", 15);\n    i0.ɵɵtext(28, \"Select an option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"option\", 16);\n    i0.ɵɵtext(30, \"To-Do\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"option\", 17);\n    i0.ɵɵtext(32, \"In progress\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"option\", 18);\n    i0.ɵɵtext(34, \"Done\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(35, \"br\");\n    i0.ɵɵelementStart(36, \"div\", 19)(37, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CardComponent_div_19_Template_button_click_37_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.card && ctx_r6.editCard(ctx_r6.card));\n    });\n    i0.ɵɵtext(38, \"Submit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function CardComponent_div_19_Template_button_click_39_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.cancelForm());\n    });\n    i0.ɵɵtext(40, \"Cancel\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.taskName);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.description);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.taskHandler);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cardState);\n  }\n}\nexport class CardComponent {\n  constructor(cardService) {\n    this.cardService = cardService;\n    this.cardDeleted = new EventEmitter();\n    this.cardEdited = new EventEmitter();\n    this.showEditForm = false;\n  }\n  cancelForm() {\n    this.showEditForm = false;\n  }\n  editCard(card) {\n    card.cardName = this.taskName;\n    card.cardDescription = this.description;\n    card.taskHandler = this.taskHandler;\n    card.cardState = this.cardState;\n    this.cardService.editCard(card).subscribe(response => {\n      this.cardEdited.emit(card);\n      //TODO refresh columns!\n      console.log('Card updated successfully:', response);\n    }, error => {\n      console.error('Error updating card:', error);\n    });\n    this.showEditForm = false;\n  }\n  deleteCard(card) {\n    if (card.cardId) {\n      this.cardService.deleteCard(card.cardId).subscribe(response => {\n        this.cardDeleted.emit(card);\n        console.log('Card successfully deleted:', response);\n      }, error => {\n        console.error('Error deleting card:', error);\n      });\n    } else {\n      console.error('Card is undefined.');\n    }\n  }\n  static #_ = this.ɵfac = function CardComponent_Factory(t) {\n    return new (t || CardComponent)(i0.ɵɵdirectiveInject(i1.CardService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CardComponent,\n    selectors: [[\"app-card\"]],\n    inputs: {\n      card: \"card\"\n    },\n    outputs: {\n      cardDeleted: \"cardDeleted\",\n      cardEdited: \"cardEdited\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 22,\n    vars: 4,\n    consts: [[1, \"card\"], [\"mat-button\", \"\", 1, \"edit-task\", 3, \"click\"], [\"class\", \"edit-card-form\", 4, \"ngIf\"], [\"mat-button\", \"\", 1, \"delete-card\", 3, \"click\"], [1, \"edit-card-form\"], [\"mat-dialog-title\", \"\", 1, \"dialog-title\"], [\"mat-dialog-content\", \"\", 1, \"form-container\"], [1, \"form-group\"], [\"for\", \"inputField\"], [\"type\", \"text\", \"id\", \"inputField\", \"name\", \"inputField\", \"placeholder\", \"Edit task name\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"card-description\"], [\"name\", \"card-description\", \"id\", \"card-description\", \"cols\", \"30\", \"rows\", \"10\", 1, \"card-description\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"inputField\", \"name\", \"inputField\", \"placeholder\", \"Edit task handler\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"selectField\"], [\"id\", \"selectField\", \"name\", \"selectField\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [\"value\", \"TO_DO\"], [\"value\", \"IN_PROGRESS\"], [\"value\", \"DONE\"], [1, \"form-buttons\"], [\"mat-button\", \"\", 1, \"submit_btn\", 3, \"click\"], [\"mat-button\", \"\", 1, \"cancel_btn\", 3, \"click\"]],\n    template: function CardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\")(2, \"mat-card-subtitle\");\n        i0.ɵɵtext(3, \"Task name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-title\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"mat-card-subtitle\");\n        i0.ɵɵtext(8, \"Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-card-subtitle\");\n        i0.ɵɵtext(12, \"Task handler:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"mat-divider\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-card-actions\")(17, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CardComponent_Template_button_click_17_listener() {\n          return ctx.showEditForm = !ctx.showEditForm;\n        });\n        i0.ɵɵtext(18, \"Edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, CardComponent_div_19_Template, 41, 4, \"div\", 2);\n        i0.ɵɵelementStart(20, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function CardComponent_Template_button_click_20_listener() {\n          return ctx.card && ctx.deleteCard(ctx.card);\n        });\n        i0.ɵɵtext(21, \"Delete\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.card == null ? null : ctx.card.cardName);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.card == null ? null : ctx.card.cardDescription);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.card == null ? null : ctx.card.taskHandler);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.showEditForm);\n      }\n    },\n    dependencies: [MatCardModule, i2.MatCard, i2.MatCardActions, i2.MatCardContent, i2.MatCardHeader, i2.MatCardSubtitle, i2.MatCardTitle, MatDividerModule, i3.MatDivider, MatButtonModule, i4.MatButton, MatProgressBarModule, FormsModule, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm, NgIf],\n    styles: [\".card[_ngcontent-%COMP%] {\\n  max-width: 340px;\\n  border-style: double;\\n  background-color:lightgray;\\n  margin: 10px;\\n  border-radius: 5px;\\n}\\n.card-header[_ngcontent-%COMP%] {\\n  border: 1px solid white;\\n  border-radius: 5px;\\n}\\n.card-content[_ngcontent-%COMP%] {\\n  border: 1px solid white;\\n  border-radius: 5px;\\n}\\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\\n  color:black;\\n}\\nmat-card-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n.edit-card-form[_ngcontent-%COMP%] {\\n  position: fixed;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  background: whitesmoke;\\n  padding: 20px;\\n  border-radius: 10px;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n  z-index: 999;\\n}\\n.form-container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  min-width: 300px;\\n  margin: 0 auto;\\n  padding: 20px;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  background-color: whitesmoke;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  box-sizing: border-box;\\n}\\n.dialog-title[_ngcontent-%COMP%] {\\n  color: black;\\n  padding-top: 10px;\\n  text-align: center;\\n}\\n.button-container[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n.submit_btn[_ngcontent-%COMP%], .cancel_btn[_ngcontent-%COMP%] {\\n    color: black;\\n}\\n.form-buttons[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FyZC9jYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsb0JBQW9CO0VBQ3BCLDBCQUEwQjtFQUMxQixZQUFZO0VBQ1osa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLGFBQWE7RUFDYix5QkFBeUI7QUFDM0I7QUFDQTtFQUNFLGVBQWU7RUFDZixRQUFRO0VBQ1IsU0FBUztFQUNULGdDQUFnQztFQUNoQyxzQkFBc0I7RUFDdEIsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1Q0FBdUM7RUFDdkMsWUFBWTtBQUNkO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQiw0QkFBNEI7RUFDNUIsYUFBYTtFQUNiLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0UsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0lBQ0ksWUFBWTtBQUNoQjtBQUNBO0VBQ0UsYUFBYTtFQUNiLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcclxuICBtYXgtd2lkdGg6IDM0MHB4O1xyXG4gIGJvcmRlci1zdHlsZTogZG91YmxlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6bGlnaHRncmF5O1xyXG4gIG1hcmdpbjogMTBweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuLmNhcmQtaGVhZGVyIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuLmNhcmQtY29udGVudCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcbi5tYXQtbWRjLWNhcmQtc3VidGl0bGUge1xyXG4gIGNvbG9yOmJsYWNrO1xyXG59XHJcbm1hdC1jYXJkLWFjdGlvbnMge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxufVxyXG4uZWRpdC1jYXJkLWZvcm0ge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgYmFja2dyb3VuZDogd2hpdGVzbW9rZTtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIHotaW5kZXg6IDk5OTtcclxufVxyXG4uZm9ybS1jb250YWluZXIge1xyXG4gIG1heC13aWR0aDogNDAwcHg7XHJcbiAgbWluLXdpZHRoOiAzMDBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcbi5mb3JtLWdyb3VwIHtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcbi5mb3JtLWdyb3VwIGxhYmVsIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuLmZvcm0tZ3JvdXAgaW5wdXQsIC5mb3JtLWdyb3VwIHNlbGVjdCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcbi5kaWFsb2ctdGl0bGUge1xyXG4gIGNvbG9yOiBibGFjaztcclxuICBwYWRkaW5nLXRvcDogMTBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLmJ1dHRvbi1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuLnN1Ym1pdF9idG4sIC5jYW5jZWxfYnRuIHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG4uZm9ybS1idXR0b25zIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","MatProgressBarModule","MatButtonModule","MatDividerModule","MatCardModule","FormsModule","NgIf","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","CardComponent_div_19_Template_input_ngModelChange_9_listener","$event","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","taskName","CardComponent_div_19_Template_textarea_ngModelChange_15_listener","ctx_r3","description","CardComponent_div_19_Template_input_ngModelChange_20_listener","ctx_r4","taskHandler","CardComponent_div_19_Template_select_ngModelChange_26_listener","ctx_r5","cardState","CardComponent_div_19_Template_button_click_37_listener","ctx_r6","card","editCard","CardComponent_div_19_Template_button_click_39_listener","ctx_r7","cancelForm","ɵɵadvance","ɵɵproperty","ctx_r0","CardComponent","constructor","cardService","cardDeleted","cardEdited","showEditForm","cardName","cardDescription","subscribe","response","emit","console","log","error","deleteCard","cardId","_","ɵɵdirectiveInject","i1","CardService","_2","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","CardComponent_Template","rf","ctx","CardComponent_Template_button_click_17_listener","ɵɵtemplate","CardComponent_div_19_Template","CardComponent_Template_button_click_20_listener","ɵɵtextInterpolate","i2","MatCard","MatCardActions","MatCardContent","MatCardHeader","MatCardSubtitle","MatCardTitle","i3","MatDivider","i4","MatButton","i5","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","NgModel","NgForm","styles"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\card\\card.component.ts","C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\card\\card.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\nimport { Card } from '../models/card';\nimport { CardService } from '../services/card.service';\nimport { State } from '../enums/state';\nimport { FormsModule } from '@angular/forms';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css'],\n  standalone: true,\n  imports: [MatCardModule, MatDividerModule, MatButtonModule, MatProgressBarModule, FormsModule, NgIf]\n})\n\nexport class CardComponent {\n\n  @Input() card: Card | undefined;\n  @Output() cardDeleted: EventEmitter<Card> = new EventEmitter<Card>();\n  @Output() cardEdited: EventEmitter<Card> = new EventEmitter<Card>();\n  \n  showEditForm: boolean = false;\n  taskName!: string;\n  description!: string;\n  taskHandler!: string;\n  cardState!: State;\n\n  constructor(private cardService: CardService) {}\n\n  cancelForm(): void {\n    this.showEditForm = false;\n  }\n\n  editCard(card: Card): void {\n\n    card.cardName = this.taskName;\n    card.cardDescription = this.description;\n    card.taskHandler = this.taskHandler;\n    card.cardState = this.cardState;\n    this.cardService.editCard(card).subscribe(\n      (response: Card) => {\n        this.cardEdited.emit(card);\n        //TODO refresh columns!\n        console.log('Card updated successfully:', response);\n      },\n      (error) => {\n        console.error('Error updating card:', error);\n      }\n    );\n    this.showEditForm = false;\n  }\n\n  deleteCard(card: Card): void {\n    if (card.cardId) {\n      this.cardService.deleteCard(card.cardId).subscribe(\n        (response: void) => {\n          this.cardDeleted.emit(card);\n          console.log('Card successfully deleted:', response);\n        },\n        (error) => {\n          console.error('Error deleting card:', error);\n        }\n      );\n    } else {\n      console.error('Card is undefined.');\n    }\n  }\n}","<mat-card class=\"card\">\n  <mat-card-header>\n    <mat-card-subtitle>Task name:</mat-card-subtitle>\n    <mat-card-title>{{ card?.cardName }}</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <mat-card-subtitle>Description:</mat-card-subtitle>\n    <p>{{ card?.cardDescription }}</p>\n    <mat-card-subtitle>Task handler:</mat-card-subtitle>\n    <p>{{ card?.taskHandler }}</p>\n    <mat-divider></mat-divider>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button class=\"edit-task\" (click)=\"showEditForm = !showEditForm\">Edit</button>\n    <!--TODO: Add validation to all required fields and initial values of editing card-->\n    <div class=\"edit-card-form\" *ngIf=\"showEditForm\">\n      <h1 mat-dialog-title class=\"dialog-title\">Edit task</h1>\n      <div mat-dialog-content class=\"form-container\">\n          <form>\n              <div class=\"form-group\">\n                  <label for=\"inputField\">Task name:</label><br>\n                  <input type=\"text\" id=\"inputField\" name=\"inputField\" placeholder=\"Edit task name\" [(ngModel)]=\"taskName\"><br>\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"card-description\">Description:</label><br>\n                  <textarea name=\"card-description\" id=\"card-description\" cols=\"30\" rows=\"10\" class=\"card-description\" [(ngModel)]=\"description\"></textarea>\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"inputField\">Task handler:</label><br>\n                  <input type=\"text\" id=\"inputField\" name=\"inputField\" placeholder=\"Edit task handler\" [(ngModel)]=\"taskHandler\"><br>\n              </div><br>\n              <div class=\"form-group\">\n                <label for=\"selectField\">Select state:</label>\n                <select id=\"selectField\" name=\"selectField\" [(ngModel)]=\"cardState\">\n                  <option value=\"\" disabled selected>Select an option</option>\n                  <option value=\"TO_DO\">To-Do</option>\n                  <option value=\"IN_PROGRESS\">In progress</option>\n                  <option value=\"DONE\">Done</option>\n                </select>\n              </div><br>\n              <div class=\"form-buttons\">\n                <button mat-button class=\"submit_btn\" (click)=\"card && editCard(card)\">Submit</button>\n                <button mat-button class=\"cancel_btn\" (click)=\"cancelForm()\">Cancel</button>\n              </div>\n          </form>\n      </div>\n  </div>\n    <button mat-button class=\"delete-card\" (click)=\"card && deleteCard(card)\">Delete</button>\n  </mat-card-actions>\n</mat-card> "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}