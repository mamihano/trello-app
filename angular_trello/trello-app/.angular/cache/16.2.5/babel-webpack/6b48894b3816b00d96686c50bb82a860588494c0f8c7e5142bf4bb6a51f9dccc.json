{"ast":null,"code":"import { MatButtonModule } from '@angular/material/button';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { NgIf } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/button\";\nfunction DialogDataExampleDialog_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u2713\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DialogDataExampleDialog_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u2713\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DialogDataExampleDialog_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u2713\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class MenuComponent {\n  constructor(dialog) {\n    this.dialog = dialog;\n  }\n  createNewColumn() {\n    this.dialog.open(DialogDataExampleDialog, {});\n  }\n  static #_ = this.ɵfac = function MenuComponent_Factory(t) {\n    return new (t || MenuComponent)(i0.ɵɵdirectiveInject(i1.MatDialog));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MenuComponent,\n    selectors: [[\"app-menu\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 11,\n    vars: 0,\n    consts: [[1, \"menu\"], [\"mat-button\", \"\", 1, \"create-column\", 3, \"click\"], [\"mat-button\", \"\", 1, \"filter-column\"], [\"mat-button\", \"\", 1, \"delete-column\"]],\n    template: function MenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"ul\")(2, \"li\")(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function MenuComponent_Template_button_click_3_listener() {\n          return ctx.createNewColumn();\n        });\n        i0.ɵɵtext(4, \"Create new column\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"li\")(6, \"button\", 2);\n        i0.ɵɵtext(7, \"Filter columns\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"li\")(9, \"button\", 3);\n        i0.ɵɵtext(10, \"Delete column\");\n        i0.ɵɵelementEnd()()()();\n      }\n    },\n    dependencies: [MatButtonModule, i2.MatButton, MatDialogModule],\n    styles: [\".menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n    list-style: none;\\n    padding-left: 10px;\\n}\\n.menu[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    margin-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVudS9tZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxlQUFlO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLm1lbnUgdWwge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxufVxyXG4ubWVudSBidXR0b24ge1xyXG4gICAgbWFyZ2luLXRvcDogNXB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport class DialogDataExampleDialog {\n  constructor(data) {\n    this.data = data;\n  }\n  static #_ = this.ɵfac = function DialogDataExampleDialog_Factory(t) {\n    return new (t || DialogDataExampleDialog)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DialogDataExampleDialog,\n    selectors: [[\"dialog-data-example-dialog\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 14,\n    vars: 3,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [4, \"ngIf\"]],\n    template: function DialogDataExampleDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Favorite Animal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtext(3, \" My favorite animal is: \");\n        i0.ɵɵelementStart(4, \"ul\")(5, \"li\");\n        i0.ɵɵtemplate(6, DialogDataExampleDialog_span_6_Template, 2, 0, \"span\", 2);\n        i0.ɵɵtext(7, \" Panda \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"li\");\n        i0.ɵɵtemplate(9, DialogDataExampleDialog_span_9_Template, 2, 0, \"span\", 2);\n        i0.ɵɵtext(10, \" Unicorn \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"li\");\n        i0.ɵɵtemplate(12, DialogDataExampleDialog_span_12_Template, 2, 0, \"span\", 2);\n        i0.ɵɵtext(13, \" Lion \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.data.animal === \"panda\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.data.animal === \"unicorn\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.data.animal === \"lion\");\n      }\n    },\n    dependencies: [MatDialogModule, i1.MatDialogTitle, i1.MatDialogContent, NgIf],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["MatButtonModule","MAT_DIALOG_DATA","MatDialogModule","NgIf","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","MenuComponent","constructor","dialog","createNewColumn","open","DialogDataExampleDialog","_","ɵɵdirectiveInject","i1","MatDialog","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","MenuComponent_Template","rf","ctx","ɵɵlistener","MenuComponent_Template_button_click_3_listener","i2","MatButton","styles","data","DialogDataExampleDialog_Template","ɵɵtemplate","DialogDataExampleDialog_span_6_Template","DialogDataExampleDialog_span_9_Template","DialogDataExampleDialog_span_12_Template","ɵɵadvance","ɵɵproperty","animal","MatDialogTitle","MatDialogContent","encapsulation"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\menu\\menu.component.ts","C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\actions-dialog\\actions-dialog.component.html","C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\menu\\menu.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatDialog, MAT_DIALOG_DATA, MatDialogModule} from '@angular/material/dialog';\nimport {NgIf} from '@angular/common';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css'],\n  standalone: true,\n  imports: [MatButtonModule, MatDialogModule]\n})\nexport class MenuComponent {\n  constructor(public dialog: MatDialog) {}\n\n  createNewColumn() {\n    this.dialog.open(DialogDataExampleDialog, {\n    });\n  }\n\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: '../actions-dialog/actions-dialog.component.html',\n  standalone: true,\n  imports: [MatDialogModule, NgIf],\n})\nexport class DialogDataExampleDialog {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}","<h1 mat-dialog-title>Favorite Animal</h1>\n<div mat-dialog-content>\n  My favorite animal is:\n  <ul>\n    <li>\n      <span *ngIf=\"data.animal === 'panda'\">&#10003;</span> Panda\n    </li>\n    <li>\n      <span *ngIf=\"data.animal === 'unicorn'\">&#10003;</span> Unicorn\n    </li>\n    <li>\n      <span *ngIf=\"data.animal === 'lion'\">&#10003;</span> Lion\n    </li>\n  </ul>\n</div>\n","<div class=\"menu\">\n  <ul>\n    <li><button mat-button class=\"create-column\" (click)=\"createNewColumn()\">Create new column</button></li>\n    <li><button mat-button class=\"filter-column\">Filter columns</button></li>\n    <li><button mat-button class=\"delete-column\">Delete column</button></li>\n  </ul>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}