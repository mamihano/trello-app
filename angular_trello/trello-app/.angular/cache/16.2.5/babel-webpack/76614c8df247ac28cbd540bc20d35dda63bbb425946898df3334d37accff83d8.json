{"ast":null,"code":"import { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CardService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = environment.apiUrl + \"/cards\";\n    this.cardList = [];\n  }\n  getCards() {\n    return this.http.get(this.apiServerUrl);\n  }\n  createCard(card, Card) {\n    return this.http.post(this.apiServerUrl, card);\n  }\n  deleteCard(card) {\n    const index = this.cardList.indexOf(card);\n    if (index !== -1) {\n      this.cardList.splice(index, 1);\n    }\n  }\n  static #_ = this.ɵfac = function CardService_Factory(t) {\n    return new (t || CardService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CardService,\n    factory: CardService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","CardService","constructor","http","apiServerUrl","apiUrl","cardList","getCards","get","createCard","card","Card","post","deleteCard","index","indexOf","splice","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mihanovic\\Desktop\\SpringBoot\\angular_trello\\trello-app\\src\\app\\services\\card.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Card } from '../models/card';\nimport { State } from '../enums/state';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, catchError, tap, throwError } from 'rxjs';\nimport { environment } from 'src/environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardService {\n  private apiServerUrl = environment.apiUrl + \"/cards\";\n  constructor(private http: HttpClient) {}\n\n  private cardList: Card[] = [];\n\n  getCards(): Observable<Card[]> {\n    return this.http.get<Card[]>(this.apiServerUrl);\n  }\n\n  createCard(card Card): Observable<Card> {\n    return this.http.post<Card>(this.apiServerUrl, card);\n  }\n\n  deleteCard(card: Card): void {\n    const index = this.cardList.indexOf(card);\n    if (index !== -1) {\n      this.cardList.splice(index, 1);\n    }\n  }\n}\n\n/* public addPlayer(player: Player): Observable<Player> {\n  return this.http.post<Player>(`${this.apiServerUrl}/players/add`, player);\n}\n\npublic updatePlayer(player: Player): Observable<Player> {\n  return this.http.put<Player>(`${this.apiServerUrl}/players/update`, player);\n}\n\npublic deletePlayer(playerId: number): Observable<void> {\n  return this.http.delete<void>(`${this.apiServerUrl}/players/delete/${playerId}`);\n} */"],"mappings":"AAKA,SAASA,WAAW,QAAQ,6BAA6B;;;AAKzD,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,YAAY,GAAGJ,WAAW,CAACK,MAAM,GAAG,QAAQ;IAG5C,KAAAC,QAAQ,GAAW,EAAE;EAFU;EAIvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,IAAI,CAACJ,YAAY,CAAC;EACjD;EAEAK,UAAUA,CAACC,IAAI,EAACC,IAAI;IAClB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAO,IAAI,CAACR,YAAY,EAAEM,IAAI,CAAC;EACtD;EAEAG,UAAUA,CAACH,IAAU;IACnB,MAAMI,KAAK,GAAG,IAAI,CAACR,QAAQ,CAACS,OAAO,CAACL,IAAI,CAAC;IACzC,IAAII,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACR,QAAQ,CAACU,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;EAElC;EAAC,QAAAG,CAAA,G;qBAnBUhB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}